* intro
  Simple stack language - two stacks, in the environment, for every defined type.
* DSL
  id = { ... }     --> class with fields def
  id = :bag ...    --> bag def
  id = :string ... --> string def
  id = :map ...    --> map def
  id = | ...       --> or type def

  See dsl.lisp

* build
#+name: dsl
#+begin_src lisp :results output
 (uiop:run-program "rm -rf ~/.cache/common-lisp ; rm -rf */*.fasl ; rm -rf */*~")
 (ql:quickload :stack-dsl/use)
#+end_src

#+name: dsl
#+begin_src lisp :results output
 (uiop:run-program "rm -rf ~/.cache/common-lisp ; rm -rf */*.fasl ; rm -rf */*~")
#+end_src
#+name: dsl
#+begin_src lisp :results output
 (ql:quickload :stack-dsl/test)
#+end_src

#+name: dsl
#+begin_src lisp :results output
  (stack-dsl::test)
#+end_src

#+RESULTS: dsl

  
